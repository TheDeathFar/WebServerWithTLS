---
- name: configure webserver with tls
  hosts: all
  gather_facts: true
  become: true
  vars:
    nginx_port_no_tls: 80
    server_hostname: anspractice.ru
    key_size: 4096
    key_type: RSA 
    country_name: KE
    email_address: admin@anspractice.ru
    organization_name: anspractice
  tasks:
    - name: "Install nginx via apt"
      ansible.builtin.apt:
        name: "nginx"
        state: "latest"
        update_cache: true

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/notls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: create ssl directory
      file:
        name: /etc/nginx/ssl
        state: directory

    - name: generate an OpenSSL private key
      openssl_privatekey:
        path: "/etc/nginx/ssl/{{ server_hostname }}_privkey.pem"
        size: "{{ key_size }}"
        type: "{{ key_type }}"
        backup: yes

    - name: generate an OpenSSL Certificate Signing Request with Subject information
      openssl_csr:
        path: "/etc/nginx/ssl/{{ server_hostname }}.csr"
        privatekey_path: "/etc/nginx/ssl/{{ server_hostname }}_privkey.pem"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ server_hostname }}"

    - name: generate a Self Signed OpenSSL certificate
      openssl_certificate:
        path: "/etc/nginx/ssl/{{ server_hostname }}_cert.pem"
        privatekey_path: "/etc/nginx/ssl/{{ server_hostname }}_privkey.pem"
        csr_path: "/etc/nginx/ssl/{{ server_hostname }}.csr"
        provider: selfsigned

    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem  

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: Install firewalld
      package:
        name: firewalld
        state: present

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{ nginx_port_no_tls }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true
      notify: restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
